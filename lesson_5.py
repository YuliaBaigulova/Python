# 1. Создать программно файл в текстовом формате, записать в него построчно данные,
# вводимые пользователем. Об окончании ввода данных свидетельствует пустая строка.

print("Введите построчно данные. По окончании введите пустую строку")
user_data = []
while True:
    data = input()
    if not data:
        break
    user_data.append(data)

with open('task1.txt', 'w') as info:
    info.write('\n'.join(user_data))

# 2. Создать текстовый файл (не программно), сохранить в нем несколько строк,
# выполнить подсчет количества строк, количества слов в каждой строке.
line_qty = 0
with open("task2.txt") as text:
    for line in text:
        line_qty += 1
        word_qty = 0
        for word in line.split():
            word_qty += 1
        print(f"Количество слов в {line_qty} строке = {word_qty}")
print(f"Количество строк: {line_qty}")

# 3. Создать текстовый файл (не программно), построчно записать фамилии сотрудников и величину их окладов
# (не менее 10 строк). Определить, кто из сотрудников имеет оклад менее 20 тыс.,
# вывести фамилии этих сотрудников. Выполнить подсчет средней величины дохода сотрудников.

dict = dict()

with open("task3.txt") as salaries:
    for line in salaries:
        dict.update({line.split()[0]: float(line.split()[1])})

for key, value in dict.items():
    if value < 20000:
        print(key, value)

print("Средняя величина доходов сотрудников = {:.2f}".format(sum(dict.values()) / len(dict)))

# 4. Создать (не программно) текстовый файл со следующим содержимым:
# One — 1
# Two — 2
# Three — 3
# Four — 4
# Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные.
# При этом английские числительные должны заменяться на русские.
# Новый блок строк должен записываться в новый текстовый файл.

dict = {"1": ["One", "Один"], "2": ["Two", "Два"], "3": ["Three", "Три"], "4": ["Four", "Четыре"]}

new_task4 = open("new_task4.txt", "w")

with open("task4.txt") as numbers:
    for line in numbers:
        eng = dict[line.split()[2]][0]  # находим английское значение ключа словаря
        rus = dict[line.split()[2]][1]  # находим русское значение ключа словаря
        new_task4.writelines(line.replace(eng, rus))  # заменяем английское числительное на русское

new_task4.close()

# 5. Создать (программно) текстовый файл, записать в него программно набор чисел,
# разделенных пробелами. Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.

with open("task5.txt", "w+") as numbers:
    user_numbers = input("Введите числа через пробел >>>")
    for el in user_numbers.split():
        numbers.writelines(el + '\n')

with open("task5.txt") as numbers:
    sum = 0
    for line in numbers:
        line = int(line)
        sum += line
    print(f"Сумма чисел = {sum}")

# 6. Необходимо создать (не программно) текстовый файл, где каждая строка описывает учебный предмет и
# наличие лекционных, практических и лабораторных занятий по этому предмету и их количество.
# Важно, чтобы для каждого предмета не обязательно были все типы занятий. Сформировать словарь,
# содержащий название предмета и общее количество занятий по нему. Вывести словарь на экран.
# Примеры строк файла: Информатика:   100(л)   50(пр)   20(лаб).
#                                         Физика:   30(л)   —   10(лаб)
#                                         Физкультура:   —   30(пр)   —
# Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}

dict = dict()

with open("task6.txt") as subjects:
    for line in subjects:
        line = line.replace(':', ' ')  # убираем двоеточние для корректного отображения ключей словаря
        dict.update({line.split()[0]: 0})  # заполняем словарь ключами и нулями в качестве значений
        new_line = line.replace('(', ' ')  # убираем первую скобку, чтобы цифровой элемент был ограничен пробелами
        for el in new_line.split():  # проверяем каждый элемент строки, и если он числовой, то прибавляем его к значению ключа
            if el.isdigit():
                dict[line.split()[0]] += int(el)

print(dict)

# 7. Создать вручную и заполнить несколькими строками текстовый файл,
# в котором каждая строка должна содержать данные о фирме: название, форма собственности, выручка, издержки.
# Пример строки файла: firm_1   ООО   10000   5000.
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль.
# Если фирма получила убытки, в расчет средней прибыли ее не включать.
# Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями,
# а также словарь со средней прибылью. Если фирма получила убытки, также добавить ее в словарь
# (со значением убытков).
# Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
# Итоговый список сохранить в виде json-объекта в соответствующий файл.
# Пример json-объекта:
# [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
# Подсказка: использовать менеджер контекста.

import json

dict_firm = dict()
total_profit = 0
qty_profit_firm = 0

with open("task7.txt") as firms:
    for line in firms:
        profit = float(line.split()[2]) - float(line.split()[3])
        dict_firm.update({line.split()[0]: profit})
        if profit >= 0:
            total_profit += profit
            qty_profit_firm += 1

average_profit = round(total_profit / qty_profit_firm, 2)
dict_average_profit = {"average_profit": average_profit}

with open("task7.json", "w") as json_file:
    print([dict_firm, dict_average_profit], file=json_file)

