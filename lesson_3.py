# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

try:
    divident = float(input("Введите делимое >>>"))
except ValueError:
    print("Ошибка ввода, это не число")
    divident = float(input("Введите делимое >>>"))

try:
    divisor = float(input("Введите делитель >>>"))
except ValueError:
    print("Ошибка ввода, это не число")
    divisor = float(input("Введите делитель >>>"))

def division(divident, divisor):
    """
    Делит делимое на делитель
    :param divident: Делимое
    :param divisor: Делитель
    :return number: Частное
    """
    try:
        return round(divident / divisor, 2)
    except ZeroDivisionError:
        return

print(f"{divident}/{divisor} = {division(divident, divisor)}")

# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.

def person_info(name, lastname, year_of_birth, city, email, phone):
    print(
        f"имя - {name}, фамилия - {lastname}, год рождения - {year_of_birth}, город проживания - {city}, email - {email}, телефон - {phone}")

person_info(name="Вася", lastname="Пупкин", year_of_birth=1985, city="Санкт-Петербург", email="vasya@example.ru",
            phone="+7(987)6543210")


def your_info(**kwargs):
    return kwargs

print(your_info(name=input("Введите имя >>>"),
          lastname=input("Введите фамилию >>>"),
          year_of_birth=int(input("Введите год рождения >>>")),
          city=input("Введите город проживания >>>"),
          email=input("Введите email >>>"),
          phone=input("Введите телефон >>>")))

# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.

def my_func(x1, x2, x3):
    """Возвращает сумму двух наибольших аргументов"""
    my_list = [x1, x2, x3]
    my_list.sort()
    my_list.pop(0)
    return sum(my_list)

print(f"Сумма наибольших двух аргументов = {my_func(10, 30, 20)}")


def my_func(x1, x2, x3):
    """Возвращает сумму двух наибольших аргументов"""
    my_list = [x1, x2, x3]
    my_list.remove(min(x1, x2, x3))
    return sum(my_list)

print(f"Сумма наибольших двух аргументов = {my_func(10, 30, 20)}")

# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.

try:
    x = abs(float(input("Введите действительное положительное число >>>")))
except ValueError:
    print("Ошибка ввода, это не число")
    x = abs(float(input("Введите действительное положительное число >>>")))

while True:
    y = int(input("Введите целое отрицательное число >>>"))
    if y < 0:
        break
    else:
        print("Ошибка ввода. Введите целое отрицательное число")

print(f"x = {x}, y = {y}")

# 1-ый способ
print(f"{x} в степени {y} = {pow(x, y)}")

# 2-ой способ
my_func = lambda x, y: x ** y
print(f"{x} в степени {y} = {my_func(x, y)}")

# 3-ий способ
def my_func(x, y):
    a = 1
    for i in range(abs(y)):
        a = a * x
    return 1 / a

print(f"{x} в степени {y} = {my_func(x, y)}")

# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел,
# разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# сли специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к
# полученной ранее сумме и после этого завершить программу.

def my_func():
    list_numbers = []
    while True:
        list_user = input("Введите числа через пробел. Для выхода введите end >>>")
        for el in list_user.split():
            if el == "end":
                print(f"Список введенных Вами чисел: {list_numbers}")
                print(f"Сумма элементов этого списка = {sum(list_numbers)}")
                return
            else:
                el = int(el)
                list_numbers.append(el)
        print(f"Список введенных Вами чисел: {list_numbers}")
        print(f"Сумма элементов этого списка = {sum(list_numbers)}")

my_func()

# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов,
# разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре.
# Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().

def int_func(text):
    return text.title()

print(int_func('one two three'))
print(int_func(input("Введите строку из слов, разделенных пробелом >>>").lower()))
